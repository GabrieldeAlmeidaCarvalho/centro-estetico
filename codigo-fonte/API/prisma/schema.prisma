// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MaritalStatus {
  Married
  Single
  Divorced
}

enum Gender {
  Male
  Female
}

enum UserType {
  Admin
  Client
}

enum MenstrualCycle {
  Regular
  Irregular
}

enum AppointmentType {
  Hair
  Skin
  Body
}

model User {
  id                     String               @id @default(uuid())
  name                   String               @unique
  birth_date             DateTime
  address                String
  marital_status         MaritalStatus
  email                  String               @unique
  phone                  String
  gender                 Gender
  additional_information String?
  user_type              UserType
  password_hash          String
  created_at             DateTime             @default(now())
  updated_at             DateTime             @updatedAt
  Client                 Client[]
  AppointmentHistory     AppointmentHistory[]

  @@map("users")
}

model SkinAnalysis {
  id                          String   @id @default(uuid())
  client_id                   String
  skinPhototypes              String? // Fototipo
  skinColors                  String? // Coloração
  dehydrationLevels           String? // Desidratação
  skinTextures                String? // Textura
  poreSizes                   String? // Óstios
  skinTypes                   String? // Tipo Cutâneo
  oilinessLevels              String? // Grau de Oleosidade
  acneGrades                  String? // Grau de Acne
  skinInvolutionLine          String? // Involucao cutanea
  skinInvolutionSulcus        String? // Involucao cutanea
  skinContains                String[] // Presenca De
  hypotonias                  String[] // Hipotonia
  tyrichosis                  String[] // Tricose
  scarsHypotrophic            String? // Cicatrizes
  scarsHypertrophic           Boolean // Cicatrizes
  scarsKeloid                 String? // Cicatrizes
  purpuricSpots               String[] // Manchas Purpúricas
  pigmentedSpots              String[] // Manchas Pigmentares
  melanotics                  String[] // Melanóticas
  notMelanotics               String[] // Não Melanóticas
  skinLesions                 String[] // Lesões Cutâneas
  fluidSkinLesions            String[] // Lesões Cutâneas liquidas
  bloodVesselsNerve           String? // Vasos Sanguíneos
  bloodVesselsTelangiectasias Boolean // Vasos Sanguíneos
  bloodVesselsCouperose       String? // Vasos Sanguíneos
  bloodVesselsCyanosis        Boolean // Vasos Sanguíneos
  bloodVesselsAnemicNevus     Boolean // Vasos Sanguíneos
  bloodVesselsErythema        Boolean // Vasos Sanguíneos
  bloodVesselsHypotrophic     String? // Vasos Sanguíneos
  bloodVesselsHypertrophic    Boolean // Vasos Sanguíneos
  bloodVesselsKeloid          Boolean // Vasos Sanguíneos
  others                      String? // Outros
  additionalInformation       String? // Observações
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  Client                      Client   @relation(fields: [client_id], references: [id])

  @@map("skin_analysis")
}

model BodyAnalysis {
  id                           String         @id @default(uuid())
  client_id                    String
  main_complaint               String
  previous_aesthetic_procedure String
  scarring_issues              Boolean
  diabetes                     Boolean
  medication_use               String
  isotretinoin_use             Boolean
  medical_treatment            String
  thrombosis                   Boolean
  surgery                      String
  oncological_history          Boolean
  infectious_disease           String
  sports_practice              String
  balanced_diet                Boolean
  daily_water_intake           String
  alcoholic_beverage_use       Boolean
  substance_use                String
  hormonal_disorder            String
  smoker                       Boolean
  sleeps_well                  Boolean
  regular_intestine            Boolean
  hypertension                 Boolean
  hypotension                  Boolean
  cardiac_issues               String
  depression                   Boolean
  epilepsy                     Boolean
  has_plates_pins              String
  dental_prosthesis            String
  renal_issue                  Boolean
  hepatic_issues               Boolean
  thyroid_problems             Boolean
  autoimmune_disease           String
  pregnancy                    Boolean
  breastfeeding                Boolean
  sun_exposure                 String
  skin_care                    String
  metacril_toxin_use           Boolean
  allergy_history              String
  sunscreen_use                Boolean
  herpes_history               Boolean
  contraceptive_use            Boolean
  menstrual_cycle              MenstrualCycle
  hormone_use                  String
  acid_use_on_skin             Boolean
  cosmetic_use                 String
  authorize_photos             Boolean
  created_at                   DateTime       @default(now())
  updated_at                   DateTime       @updatedAt
  Client                       Client         @relation(fields: [client_id], references: [id])

  @@map("body_analysis")
}

model AppointmentHistory {
  id                  String                @id @default(uuid())
  client_id           String
  user_id             String
  specialty           String
  observations        String?
  appointment_date    DateTime              @default(now())
  appointment_hour    String?
  created_at          DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  presencial          Boolean
  appointment_type    AppointmentType
  User                User                  @relation(fields: [user_id], references: [id])
  Client              Client                @relation(fields: [client_id], references: [id])
  AppointmentSkinData AppointmentSkinData[]
  AppointmentBodyData AppointmentBodyData[]

  @@map("appointment_history")
}

model AppointmentSkinData {
  id             String             @id @default(uuid())
  appointment_id String
  leftFace0      Boolean            @default(false)
  leftFace1      Boolean            @default(false)
  leftFace2      Boolean            @default(false)
  leftFace3      Boolean            @default(false)
  leftFace4      Boolean            @default(false)
  leftFace5      Boolean            @default(false)
  leftFace6      Boolean            @default(false)
  leftFace7      Boolean            @default(false)
  leftFace8      Boolean            @default(false)
  leftFace9      Boolean            @default(false)
  leftFace10     Boolean            @default(false)
  rightFace0     Boolean            @default(false)
  rightFace1     Boolean            @default(false)
  rightFace2     Boolean            @default(false)
  rightFace3     Boolean            @default(false)
  rightFace4     Boolean            @default(false)
  rightFace5     Boolean            @default(false)
  rightFace6     Boolean            @default(false)
  rightFace7     Boolean            @default(false)
  rightFace8     Boolean            @default(false)
  rightFace9     Boolean            @default(false)
  rightFace10    Boolean            @default(false)
  frontFace0     Boolean            @default(false)
  frontFace1     Boolean            @default(false)
  frontFace2     Boolean            @default(false)
  frontFace3     Boolean            @default(false)
  frontFace4     Boolean            @default(false)
  frontFace5     Boolean            @default(false)
  frontFace6     Boolean            @default(false)
  frontFace7     Boolean            @default(false)
  frontFace8     Boolean            @default(false)
  frontFace9     Boolean            @default(false)
  frontFace10    Boolean            @default(false)
  frontFace11    Boolean            @default(false)
  Appointment    AppointmentHistory @relation(fields: [appointment_id], references: [id])

  @@map("appointment_skin_data")
}

model AppointmentBodyData {
  id                String             @id @default(uuid())
  appointment_id    String
  backBody0         Boolean            @default(false)
  backBody1         Boolean            @default(false)
  backBody2         Boolean            @default(false)
  backBody3         Boolean            @default(false)
  backBody4         Boolean            @default(false)
  backBody5         Boolean            @default(false)
  backBody6         Boolean            @default(false)
  backBody7         Boolean            @default(false)
  backBody8         Boolean            @default(false)
  backBody9         Boolean            @default(false)
  backBody10        Boolean            @default(false)
  backBody11        Boolean            @default(false)
  backBody12        Boolean            @default(false)
  backBody13        Boolean            @default(false)
  backBody14        Boolean            @default(false)
  backBody15        Boolean            @default(false)
  backBody16        Boolean            @default(false)
  backBody17        Boolean            @default(false)
  backBody18        Boolean            @default(false)
  backBody19        Boolean            @default(false)
  backBody20        Boolean            @default(false)
  backBody21        Boolean            @default(false)
  frontBody0        Boolean            @default(false)
  frontBody1        Boolean            @default(false)
  frontBody2        Boolean            @default(false)
  frontBody3        Boolean            @default(false)
  frontBody4        Boolean            @default(false)
  frontBody5        Boolean            @default(false)
  frontBody6        Boolean            @default(false)
  frontBody7        Boolean            @default(false)
  frontBody8        Boolean            @default(false)
  frontBody9        Boolean            @default(false)
  frontBody10       Boolean            @default(false)
  frontBody11       Boolean            @default(false)
  frontBody12       Boolean            @default(false)
  frontBody13       Boolean            @default(false)
  frontBody14       Boolean            @default(false)
  frontBody15       Boolean            @default(false)
  frontBody16       Boolean            @default(false)
  frontBody17       Boolean            @default(false)
  frontBody18       Boolean            @default(false)
  frontBody19       Boolean            @default(false)
  frontBody20       Boolean            @default(false)
  frontBody21       Boolean            @default(false)
  abdomenTop        Float?
  abdomenBottom     Float?
  waist             Float?
  hip               Float?
  upperLegProxRight Float?
  upperLegProxLeft  Float?
  mediumLegRight    Float?
  mediumLegLeft     Float?
  distalLegRight    Float?
  distalLegLeft     Float?
  legRight          Float?
  legLeft           Float?
  armRight          Float?
  armLeft           Float?
  chestRight        Float?
  chestLeft         Float?
  Appointment       AppointmentHistory @relation(fields: [appointment_id], references: [id])

  @@map("appointment_body_data")
}

model HealthQuestionnaire {
  id                              String   @id @default(uuid())
  client_id                       String
  problem_description             String?
  aesthetic_procedure             Boolean
  aesthetic_procedure_description String?
  cicatrization                   Boolean
  diabetes                        Boolean
  diabetes_is_controlled          String?
  medication_use                  Boolean
  medication_use_description      String?
  roaccutane                      Boolean
  medical_treatment               Boolean
  medical_treatment_description   String?
  thrombosis                      Boolean
  surgery                         Boolean
  surgery_description             String?
  oncological_history             Boolean
  infectious_disease              Boolean
  infectious_disease_description  String?
  practice_sports                 Boolean
  practice_sports_description     String?
  balanced_diet                   Boolean
  alcohol                         Boolean
  drugs                           Boolean
  hormonal_disorder               Boolean
  smoke                           Boolean
  sleep                           Boolean
  bowel_function                  Boolean
  hypertension                    Boolean
  hypertension_is_controlled      String?
  hypotension                     Boolean
  hypotension_is_controlled       String?
  cardiac_issues                  Boolean
  cardiac_issues_description      String?
  depression                      Boolean
  epilepsy                        Boolean
  plates_pins                     Boolean
  plates_pins_description         String?
  dental_prosthesis               Boolean
  kidney_problem                  Boolean
  kidney_problem_description      String?
  liver_problem                   Boolean
  thyroid_problem                 Boolean
  auto_immune_disease             Boolean
  pregnant                        Boolean
  breastfeeding                   Boolean
  sun_exposure                    Boolean
  sun_care                        Boolean
  skin_care                       Boolean
  methacryl_or_botulinum_toxin    Boolean
  allergy_history                 Boolean
  herpes                          Boolean
  contraceptive                   Boolean
  menstrual_cycle                 Boolean
  hormones                        Boolean
  acid_skin                       Boolean
  cosmetic                        Boolean
  cosmetic_description            String?
  drink_water                     String
  authorize_photos                Boolean  @default(false)
  authorize_data                  Boolean
  created_at                      DateTime @default(now())
  updated_at                      DateTime @updatedAt
  Client                          Client   @relation(fields: [client_id], references: [id])

  @@map("health_questionnaire")
}

model Client {
  id                     String                @id @default(uuid())
  user_id                String
  name                   String
  email                  String                @unique
  birth_date             DateTime
  address                String?
  phone                  String
  gender                 Gender
  additional_information String?
  created_at             DateTime              @default(now())
  updated_at             DateTime              @updatedAt
  SkinAnalysis           SkinAnalysis[]
  BodyAnalysis           BodyAnalysis[]
  AppointmentHistory     AppointmentHistory[]
  HealthQuestionnaire    HealthQuestionnaire[]
  User                   User                  @relation(fields: [user_id], references: [id])

  @@map("clients")
}
